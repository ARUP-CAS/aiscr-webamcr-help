# Procesní pravidla a stavy

Jedním z hlavních poslání AMČR je zabezpečit nutnou agendu a evidenci archeologických [akcí](pojmy.qmd#akce) prováděných na území ČR.
V aplikaci proto nejsou obsažena pouze data, která lze považovat za archivní, ale také rozpracované záznamy, které postihují právě probíhající, případně nedávno realizované výzkumy.
Pro sběr a užívání dat v AMČR platí tzv. procesní pravidla, která říkají, jaký [typ uživatele](role.qmd) spravuje danou datovou třídu, v jaký okamžik vkládá data a jakého cíle má být dosaženo.

Pro označení fáze zpracování záznamů slouží tzv. **procesní stavy**, které jsou přidělovány všem záznamům v základních datových třídách ([Projekty](pojmy.qmd#projekty), [Akce](pojmy.qmd#akce), [Lokality](pojmy.qmd#lokality), [Dokumenty](pojmy.qmd#dokumenty), [Bibliografie](pojmy.qmd#externí-zdroje), [PIAN](pojmy.qmd#pian)).
Procesní stav určuje, kdo může daný záznam zobrazit, kdo jej může editovat, jaké funkce jsou pro práci se záznamem dostupné a zároveň jaké kroky je třeba učinit pro plnou archivaci záznamu.
Každému ze stavů také odpovídá určitý okruh dat, která je v daném okamžiku možno (či nutno) vložit, a určitá práva a povinnosti konkrétních uživatelů.

Procesním stavem rozumíme dílčí fázi archeologické (terénní) aktivity, což lze na obecnější rovině chápat jako specifickou fázi vzniku archeologické informace.
Např. každý projekt musí být nejprve zapsán do systému (stav P1), a to s některými povinnými popisnými údaji.
Zapsaný projekt si může některá z oprávněných organizací rezervovat k provedení výzkumu (P2), přičemž doplňuje některé údaje a zároveň dočasně omezuje dostupnost jiných pro ostatní uživatele (např. osobní údaje týkající se stavebníka).
Daná [oprávněná organizace](pojmy.qmd#oprávněná-archeologická-organizace) nyní získává povinnost zahájit a oznámit terénní práce (P3), informovat o jejich ukončení (P4) a v zákonné lhůtě podat závěrečnou informaci spolu s [nálezovou zprávou](pojmy.qmd#nálezová-zpráva) (P6).
Poté archivář rozhoduje, zda podané podklady je třeba vrátit k doplnění/přepracování (P7), nebo je možno je uznat za dostatečné a archivovat (P8).

Podobným způsobem probíhá i životní cyklus [akcí](pojmy.qmd#akce), který má různé varianty, a to podle typu akce (projektová akce/samostatná akce).
Projektové akce procházejí pouze stavy A1-A2-A6-A7-A8, protože podávat závěrečnou informaci o výsledcích výzkumu bez předepsané nálezové zprávy není povoleno.
U samostatných akcí, převážně starých výzkumů, kde zhotovení úplné nálezové zprávy je už málo pravděpodobné, je tato praxe povolena a jejich životní cyklus se tedy skládá ze všech uvedených kroků.
V poněkud jednodušší podobě se procesní stavy vyskytují i u záznamů dalších datových tříd.

Přechod od jednoho procesního stavu k druhému je řízen interakcemi systému, uživatele a archiváře.
Systém eviduje datum přechodu jednotky z jednoho stavu do druhého a uživatele, který přechod provedl.
V případě stavů, které mohou být nabývány opakovaně (např. „vrácení zprávy o akci k dopracování“) se eviduje i historie změn a důvody, které k nim vedly.

![Návaznost procesních stavů projektů a akcí](figs/stavy_schema.png){#fig-stavy}

## Procesní stavy projektů

```{r}
#| label: tbl-stavy-projekty
#| tbl-cap: "Procesní stavy projektů"

read.csv("tabs/stavy-projekty.csv") |>
  knitr::kable()
```

## Procesní stavy akcí

```{r}
#| label: tbl-stavy-akce
#| tbl-cap: "Procesní stavy akcí"

read.csv("tabs/stavy-akce.csv") |>
  knitr::kable()
```

## Procesní stavy lokalit

```{r}
#| label: tbl-stavy-lokality
#| tbl-cap: "Procesní stavy lokalit"

read.csv("tabs/stavy-lokality.csv") |>
  knitr::kable()
```

## Procesní stavy dokumentů

```{r}
#| label: tbl-stavy-dokumenty
#| tbl-cap: "Procesní stavy dokumentů"

read.csv("tabs/stavy-dokumenty.csv") |>
  knitr::kable()
```

## Procesní stavy externích zdrojů

```{r}
#| label: tbl-stavy-biblio
#| tbl-cap: "Procesní stavy externích zdrojů"

read.csv("tabs/stavy-biblio.csv") |>
  knitr::kable()
```

## Procesní stavy jednotek PIAN

```{r}
#| label: tbl-stavy-pian
#| tbl-cap: "Procesní stavy jednotek PIAN"

read.csv("tabs/stavy-pian.csv") |>
  knitr::kable()
```
